import{_ as n,c as a,b as e,o as l}from"./app-DYAirNoF.js";const i={};function p(c,s){return l(),a("div",null,s[0]||(s[0]=[e(`<h2 id="docker" tabindex="-1"><a class="header-anchor" href="#docker"><span>docker</span></a></h2><h3 id="docker-部署-mysql" tabindex="-1"><a class="header-anchor" href="#docker-部署-mysql"><span>docker 部署 mysql</span></a></h3><h4 id="部署过程" tabindex="-1"><a class="header-anchor" href="#部署过程"><span>部署过程</span></a></h4><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token comment">## 拉取 docker 镜像</span></span>
<span class="line"><span class="token function">docker</span> pull mysql:latest</span>
<span class="line"><span class="token comment">## 创建配置目录与优化配置文件</span></span>
<span class="line"><span class="token function">mkdir</span> <span class="token parameter variable">-p</span> ~/mysql/config  <span class="token comment"># 配置文件目录</span></span>
<span class="line"><span class="token function">mkdir</span> <span class="token parameter variable">-p</span> ~/mysql/data    <span class="token comment"># 数据目录（自动创建，无需手动操作）</span></span>
<span class="line"><span class="token function">mkdir</span> <span class="token parameter variable">-p</span> ~/mysql/mysql-files</span>
<span class="line"><span class="token comment">## 创建优化后的MySQL配置文件（适合2核2G服务器）</span></span>
<span class="line"><span class="token function">cat</span> <span class="token operator">&gt;</span> ~/mysql/config/my.cnf <span class="token operator">&lt;&lt;</span> <span class="token string">EOF</span>
<span class="line">[mysqld]</span>
<span class="line"># 基础设置</span>
<span class="line">port = 3306</span>
<span class="line">bind-address = 0.0.0.0  # 允许外部连接</span>
<span class="line">default-storage-engine = InnoDB</span>
<span class="line"># 字符集设置（新增！解决密码验证问题）</span>
<span class="line">character-set-server = utf8mb4</span>
<span class="line">collation-server = utf8mb4_unicode_ci</span>
<span class="line"># 内存优化（关键参数！）</span>
<span class="line">innodb_buffer_pool_size = 512M      # 缓冲池大小，占物理内存的30%</span>
<span class="line">innodb_log_file_size = 64M          # 日志文件大小</span>
<span class="line">innodb_log_buffer_size = 8M         # 日志缓冲区</span>
<span class="line">key_buffer_size = 16M               # MyISAM索引缓存</span>
<span class="line">sort_buffer_size = 2M               # 排序缓冲区</span>
<span class="line">read_buffer_size = 1M               # 读取缓冲区</span>
<span class="line">join_buffer_size = 2M               # 连接缓冲区</span>
<span class="line">max_connections = 100               # 限制最大连接数</span>
<span class="line">max_allowed_packet = 16M            # 最大允许数据包大小</span>
<span class="line"># 性能优化</span>
<span class="line">innodb_flush_log_at_trx_commit = 2  # 牺牲一点持久性换取性能</span>
<span class="line">sync_binlog = 1                     # 改为1以确保数据安全（原为0）</span>
<span class="line">innodb_thread_concurrency = 4       # 限制InnoDB线程数（2核服务器建议4）</span>
<span class="line"># 日志设置（可选）</span>
<span class="line">slow_query_log = 1</span>
<span class="line">slow_query_log_file = /var/lib/mysql/slow.log</span>
<span class="line">long_query_time = 2</span>
<span class="line">EOF</span></span>
<span class="line"><span class="token comment">## 使用 Docker 命令启动 MySQL</span></span>
<span class="line"><span class="token function">docker</span> run <span class="token parameter variable">-itd</span> <span class="token parameter variable">--name</span> mysql-myblog <span class="token parameter variable">-p</span> <span class="token number">3306</span>:3306 <span class="token parameter variable">-e</span> <span class="token assign-left variable">MYSQL_ROOT_PASSWORD</span><span class="token operator">=</span><span class="token number">208941</span> <span class="token parameter variable">--mount</span> <span class="token assign-left variable">type</span><span class="token operator">=</span>bind,source<span class="token operator">=</span><span class="token string">&quot;<span class="token variable"><span class="token variable">$(</span><span class="token builtin class-name">pwd</span><span class="token variable">)</span></span>&quot;</span>/mysql/config/my.cnf,target<span class="token operator">=</span>/etc/mysql/my.cnf <span class="token parameter variable">--mount</span> <span class="token assign-left variable">type</span><span class="token operator">=</span>bind,source<span class="token operator">=</span><span class="token string">&quot;<span class="token variable"><span class="token variable">$(</span><span class="token builtin class-name">pwd</span><span class="token variable">)</span></span>&quot;</span>/mysql/data,target<span class="token operator">=</span>/var/lib/mysql <span class="token parameter variable">--mount</span> <span class="token assign-left variable">type</span><span class="token operator">=</span>bind,source<span class="token operator">=</span><span class="token string">&quot;<span class="token variable"><span class="token variable">$(</span><span class="token builtin class-name">pwd</span><span class="token variable">)</span></span>&quot;</span>/mysql/mysql-files,target<span class="token operator">=</span>/var/lib/mysql-files mysql</span>
<span class="line"><span class="token comment">## 启动失败删除mysql容器</span></span>
<span class="line"><span class="token function">docker</span> stop mysql-myblog <span class="token operator">&amp;&amp;</span> <span class="token function">docker</span> <span class="token function">rm</span> mysql-myblog</span>
<span class="line"><span class="token comment">## 启动成功登录mysql</span></span>
<span class="line"><span class="token function">docker</span> <span class="token builtin class-name">exec</span> <span class="token parameter variable">-it</span> mysql-myblog mysql <span class="token parameter variable">-u</span> root <span class="token parameter variable">-p</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="常见问题" tabindex="-1"><a class="header-anchor" href="#常见问题"><span>常见问题</span></a></h4><ol><li>Access denied</li></ol><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token punctuation">[</span>root@iZwz9b5a76d7cz6z7r9v4gZ ~<span class="token punctuation">]</span><span class="token comment"># docker exec -it mysql-myblog mysql -u root -p</span></span>
<span class="line">Enter password:</span>
<span class="line">ERROR <span class="token number">1045</span> <span class="token punctuation">(</span><span class="token number">28000</span><span class="token punctuation">)</span>: Access denied <span class="token keyword">for</span> user <span class="token string">&#39;root&#39;</span>@<span class="token string">&#39;localhost&#39;</span> <span class="token punctuation">(</span>using password: YES<span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>问题解决：一般是~/mysql/config/my.cnf 配置文件没指定字符集，和系统字符集不匹配</p><h3 id="docker-部署-rocketmq" tabindex="-1"><a class="header-anchor" href="#docker-部署-rocketmq"><span>docker 部署 rocketmq</span></a></h3><p>docker 部署 rocketmq 地址： https://rocketmq.apache.org/zh/docs/quickStart/02quickstartWithDocker/</p>`,10)]))}const t=n(i,[["render",p]]),o=JSON.parse('{"path":"/serverside/docker/","title":"","lang":"en-US","frontmatter":{},"headers":[{"level":2,"title":"docker","slug":"docker","link":"#docker","children":[{"level":3,"title":"docker 部署 mysql","slug":"docker-部署-mysql","link":"#docker-部署-mysql","children":[]},{"level":3,"title":"docker 部署 rocketmq","slug":"docker-部署-rocketmq","link":"#docker-部署-rocketmq","children":[]}]}],"git":{"updatedTime":1751387617000,"contributors":[{"name":"wangjiaxuan","email":"610798187@qq.com","commits":3,"url":"https://github.com/wangjiaxuan"}]},"filePathRelative":"serverside/docker/README.md","excerpt":"<h2>docker</h2>\\n<h3>docker 部署 mysql</h3>\\n<h4>部署过程</h4>\\n<div class=\\"language-bash line-numbers-mode\\" data-highlighter=\\"prismjs\\" data-ext=\\"sh\\" data-title=\\"sh\\"><pre><code><span class=\\"line\\"><span class=\\"token comment\\">## 拉取 docker 镜像</span></span>\\n<span class=\\"line\\"><span class=\\"token function\\">docker</span> pull mysql:latest</span>\\n<span class=\\"line\\"><span class=\\"token comment\\">## 创建配置目录与优化配置文件</span></span>\\n<span class=\\"line\\"><span class=\\"token function\\">mkdir</span> <span class=\\"token parameter variable\\">-p</span> ~/mysql/config  <span class=\\"token comment\\"># 配置文件目录</span></span>\\n<span class=\\"line\\"><span class=\\"token function\\">mkdir</span> <span class=\\"token parameter variable\\">-p</span> ~/mysql/data    <span class=\\"token comment\\"># 数据目录（自动创建，无需手动操作）</span></span>\\n<span class=\\"line\\"><span class=\\"token function\\">mkdir</span> <span class=\\"token parameter variable\\">-p</span> ~/mysql/mysql-files</span>\\n<span class=\\"line\\"><span class=\\"token comment\\">## 创建优化后的MySQL配置文件（适合2核2G服务器）</span></span>\\n<span class=\\"line\\"><span class=\\"token function\\">cat</span> <span class=\\"token operator\\">&gt;</span> ~/mysql/config/my.cnf <span class=\\"token operator\\">&lt;&lt;</span> <span class=\\"token string\\">EOF</span>\\n<span class=\\"line\\">[mysqld]</span>\\n<span class=\\"line\\"># 基础设置</span>\\n<span class=\\"line\\">port = 3306</span>\\n<span class=\\"line\\">bind-address = 0.0.0.0  # 允许外部连接</span>\\n<span class=\\"line\\">default-storage-engine = InnoDB</span>\\n<span class=\\"line\\"># 字符集设置（新增！解决密码验证问题）</span>\\n<span class=\\"line\\">character-set-server = utf8mb4</span>\\n<span class=\\"line\\">collation-server = utf8mb4_unicode_ci</span>\\n<span class=\\"line\\"># 内存优化（关键参数！）</span>\\n<span class=\\"line\\">innodb_buffer_pool_size = 512M      # 缓冲池大小，占物理内存的30%</span>\\n<span class=\\"line\\">innodb_log_file_size = 64M          # 日志文件大小</span>\\n<span class=\\"line\\">innodb_log_buffer_size = 8M         # 日志缓冲区</span>\\n<span class=\\"line\\">key_buffer_size = 16M               # MyISAM索引缓存</span>\\n<span class=\\"line\\">sort_buffer_size = 2M               # 排序缓冲区</span>\\n<span class=\\"line\\">read_buffer_size = 1M               # 读取缓冲区</span>\\n<span class=\\"line\\">join_buffer_size = 2M               # 连接缓冲区</span>\\n<span class=\\"line\\">max_connections = 100               # 限制最大连接数</span>\\n<span class=\\"line\\">max_allowed_packet = 16M            # 最大允许数据包大小</span>\\n<span class=\\"line\\"># 性能优化</span>\\n<span class=\\"line\\">innodb_flush_log_at_trx_commit = 2  # 牺牲一点持久性换取性能</span>\\n<span class=\\"line\\">sync_binlog = 1                     # 改为1以确保数据安全（原为0）</span>\\n<span class=\\"line\\">innodb_thread_concurrency = 4       # 限制InnoDB线程数（2核服务器建议4）</span>\\n<span class=\\"line\\"># 日志设置（可选）</span>\\n<span class=\\"line\\">slow_query_log = 1</span>\\n<span class=\\"line\\">slow_query_log_file = /var/lib/mysql/slow.log</span>\\n<span class=\\"line\\">long_query_time = 2</span>\\n<span class=\\"line\\">EOF</span></span>\\n<span class=\\"line\\"><span class=\\"token comment\\">## 使用 Docker 命令启动 MySQL</span></span>\\n<span class=\\"line\\"><span class=\\"token function\\">docker</span> run <span class=\\"token parameter variable\\">-itd</span> <span class=\\"token parameter variable\\">--name</span> mysql-myblog <span class=\\"token parameter variable\\">-p</span> <span class=\\"token number\\">3306</span>:3306 <span class=\\"token parameter variable\\">-e</span> <span class=\\"token assign-left variable\\">MYSQL_ROOT_PASSWORD</span><span class=\\"token operator\\">=</span><span class=\\"token number\\">208941</span> <span class=\\"token parameter variable\\">--mount</span> <span class=\\"token assign-left variable\\">type</span><span class=\\"token operator\\">=</span>bind,source<span class=\\"token operator\\">=</span><span class=\\"token string\\">\\"<span class=\\"token variable\\"><span class=\\"token variable\\">$(</span><span class=\\"token builtin class-name\\">pwd</span><span class=\\"token variable\\">)</span></span>\\"</span>/mysql/config/my.cnf,target<span class=\\"token operator\\">=</span>/etc/mysql/my.cnf <span class=\\"token parameter variable\\">--mount</span> <span class=\\"token assign-left variable\\">type</span><span class=\\"token operator\\">=</span>bind,source<span class=\\"token operator\\">=</span><span class=\\"token string\\">\\"<span class=\\"token variable\\"><span class=\\"token variable\\">$(</span><span class=\\"token builtin class-name\\">pwd</span><span class=\\"token variable\\">)</span></span>\\"</span>/mysql/data,target<span class=\\"token operator\\">=</span>/var/lib/mysql <span class=\\"token parameter variable\\">--mount</span> <span class=\\"token assign-left variable\\">type</span><span class=\\"token operator\\">=</span>bind,source<span class=\\"token operator\\">=</span><span class=\\"token string\\">\\"<span class=\\"token variable\\"><span class=\\"token variable\\">$(</span><span class=\\"token builtin class-name\\">pwd</span><span class=\\"token variable\\">)</span></span>\\"</span>/mysql/mysql-files,target<span class=\\"token operator\\">=</span>/var/lib/mysql-files mysql</span>\\n<span class=\\"line\\"><span class=\\"token comment\\">## 启动失败删除mysql容器</span></span>\\n<span class=\\"line\\"><span class=\\"token function\\">docker</span> stop mysql-myblog <span class=\\"token operator\\">&amp;&amp;</span> <span class=\\"token function\\">docker</span> <span class=\\"token function\\">rm</span> mysql-myblog</span>\\n<span class=\\"line\\"><span class=\\"token comment\\">## 启动成功登录mysql</span></span>\\n<span class=\\"line\\"><span class=\\"token function\\">docker</span> <span class=\\"token builtin class-name\\">exec</span> <span class=\\"token parameter variable\\">-it</span> mysql-myblog mysql <span class=\\"token parameter variable\\">-u</span> root <span class=\\"token parameter variable\\">-p</span></span>\\n<span class=\\"line\\"></span></code></pre>\\n<div class=\\"line-numbers\\" aria-hidden=\\"true\\" style=\\"counter-reset:line-number 0\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>"}');export{t as comp,o as data};
