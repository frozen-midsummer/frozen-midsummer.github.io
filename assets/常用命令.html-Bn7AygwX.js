import{_ as e,c as n,b as a,o as l}from"./app-DYAirNoF.js";const i={};function d(r,s){return l(),n("div",null,s[0]||(s[0]=[a(`<h2 id="mysql" tabindex="-1"><a class="header-anchor" href="#mysql"><span>mysql</span></a></h2><h3 id="发生死锁调试命令" tabindex="-1"><a class="header-anchor" href="#发生死锁调试命令"><span>发生死锁调试命令</span></a></h3><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line"><span class="token comment"># 查看死锁信息</span></span>
<span class="line"><span class="token keyword">show</span> <span class="token keyword">engine</span> <span class="token keyword">innodb</span> <span class="token keyword">status</span>\\G</span>
<span class="line"><span class="token comment"># 调整资源访问顺序</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="慢-sql-查询" tabindex="-1"><a class="header-anchor" href="#慢-sql-查询"><span>慢 sql 查询</span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line"># 查看当前正在执行的sql，找出慢sql</span>
<span class="line">show processlist</span>
<span class="line"># 打开慢sql日志</span>
<span class="line">## 临时打开</span>
<span class="line">SET GLOBAL slow_query_log=&#39;ON&#39;</span>
<span class="line">slow_query_log_file</span>
<span class="line">long_query_time</span>
<span class="line">## 永久打开</span>
<span class="line">my.cnf(linux) my.ini(windows)</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="查看执行计划" tabindex="-1"><a class="header-anchor" href="#查看执行计划"><span>查看执行计划</span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">explain</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>较为重要的参数： table：表名 rows：预计扫描行数 extra：using index | using filesort | key：实际选择的索引，若为 null，就没用上索引 type：访问类型：const 唯一值 | eq_ref 主键/唯一索引连接 | index 全索引扫描 | ALL 全表扫描</p><h3 id="sql-题" tabindex="-1"><a class="header-anchor" href="#sql-题"><span>sql 题</span></a></h3><p>select name,score,class from ( select name,score,class, ROW_NUMBER() over (partition by class order by score desc) as rn from table ) as st where rn &lt; 10;</p><h2 id="redis" tabindex="-1"><a class="header-anchor" href="#redis"><span>redis</span></a></h2><h3 id="常用命令" tabindex="-1"><a class="header-anchor" href="#常用命令"><span>常用命令</span></a></h3><p>SET key value SET key value NX EX 过期时间</p><p>LPUSH key value RPOP key value</p><h3 id="_8-种缓存淘汰策略" tabindex="-1"><a class="header-anchor" href="#_8-种缓存淘汰策略"><span>8 种缓存淘汰策略</span></a></h3><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">redis-cli noevication</span>
<span class="line">allkeys-random allkeys-lru allkeys-lfu</span>
<span class="line"><span class="token comment"># 针对设置了过期时间的key：</span></span>
<span class="line">volatile-lru volatile-lfu volatile-random volatile-ttl</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="aof-刷盘机制" tabindex="-1"><a class="header-anchor" href="#aof-刷盘机制"><span>aof 刷盘机制</span></a></h3><p>就是说有 append 先放操作系统缓冲区，然后以指定的频率写入磁盘</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line"># redis.conf</span>
<span class="line"># 打开aof</span>
<span class="line">appendonly yes</span>
<span class="line"># 刷新频率</span>
<span class="line">appnedfsync always | everysec | no</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="混合持久化" tabindex="-1"><a class="header-anchor" href="#混合持久化"><span>混合持久化</span></a></h3><p>在 aof 触发重写时(可设置 rewrite-percentage 和 rewrite-min-size)，将 rdb 写在开头，重写期间的 aof 写在末尾</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line"># 开启aof</span>
<span class="line">appendonly yes</span>
<span class="line"># 开启混合持久化</span>
<span class="line">aof-use-rdb-preamble yes</span>
<span class="line"># 刷盘频率</span>
<span class="line">appendfsync everysec</span>
<span class="line"># 重写时机</span>
<span class="line"># RDB备份策略</span>
<span class="line">save 900 1</span>
<span class="line">save 300 10</span>
<span class="line">save 60 10000</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="rocketmq" tabindex="-1"><a class="header-anchor" href="#rocketmq"><span>rocketmq</span></a></h2>`,23)]))}const c=e(i,[["render",d]]),p=JSON.parse('{"path":"/javainterviewexp/%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4.html","title":"","lang":"en-US","frontmatter":{},"headers":[{"level":2,"title":"mysql","slug":"mysql","link":"#mysql","children":[{"level":3,"title":"发生死锁调试命令","slug":"发生死锁调试命令","link":"#发生死锁调试命令","children":[]},{"level":3,"title":"慢 sql 查询","slug":"慢-sql-查询","link":"#慢-sql-查询","children":[]},{"level":3,"title":"查看执行计划","slug":"查看执行计划","link":"#查看执行计划","children":[]},{"level":3,"title":"sql 题","slug":"sql-题","link":"#sql-题","children":[]}]},{"level":2,"title":"redis","slug":"redis","link":"#redis","children":[{"level":3,"title":"常用命令","slug":"常用命令","link":"#常用命令","children":[]},{"level":3,"title":"8 种缓存淘汰策略","slug":"_8-种缓存淘汰策略","link":"#_8-种缓存淘汰策略","children":[]},{"level":3,"title":"aof 刷盘机制","slug":"aof-刷盘机制","link":"#aof-刷盘机制","children":[]},{"level":3,"title":"混合持久化","slug":"混合持久化","link":"#混合持久化","children":[]}]},{"level":2,"title":"rocketmq","slug":"rocketmq","link":"#rocketmq","children":[]}],"git":{"updatedTime":1750687851000,"contributors":[{"name":"wangjiaxuan","email":"610798187@qq.com","commits":1,"url":"https://github.com/wangjiaxuan"}]},"filePathRelative":"javainterviewexp/常用命令.md","excerpt":"<h2>mysql</h2>\\n<h3>发生死锁调试命令</h3>\\n<div class=\\"language-sql line-numbers-mode\\" data-highlighter=\\"prismjs\\" data-ext=\\"sql\\" data-title=\\"sql\\"><pre><code><span class=\\"line\\"><span class=\\"token comment\\"># 查看死锁信息</span></span>\\n<span class=\\"line\\"><span class=\\"token keyword\\">show</span> <span class=\\"token keyword\\">engine</span> <span class=\\"token keyword\\">innodb</span> <span class=\\"token keyword\\">status</span>\\\\G</span>\\n<span class=\\"line\\"><span class=\\"token comment\\"># 调整资源访问顺序</span></span>\\n<span class=\\"line\\"></span></code></pre>\\n<div class=\\"line-numbers\\" aria-hidden=\\"true\\" style=\\"counter-reset:line-number 0\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>"}');export{c as comp,p as data};
